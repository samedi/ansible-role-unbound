---
- name: install unbound for Debian OS family
  apt: pkg=unbound state={{ unbound_pkg_state }}
  when:
    - ansible_os_family == 'Debian'
    - not unbound_only_zones
  tags:
    - packages
    - unbound

- name: install unbound for RedHat OS family
  yum: name=unbound state={{ unbound_pkg_state }}
  when:
    - ansible_os_family == 'RedHat'
    - not unbound_only_zones
  tags:
    - packages
    - unbound

- name: ensure zones folder exist
  file: path=/etc/unbound/conf.d state=directory mode=755
  notify: restart unbound
  tags:
    - configuration
    - unbound

- name: ensure log file exist
  file:
    path: "{{ unbound_logfile }}"
    state: touch
    mode: 0644
    owner: unbound
    modification_time: preserve
    access_time: preserve
  notify: restart unbound
  tags:
    - configuration
    - unbound

- name: configure AppArmor for the log file
  template:
    src: usr.sbin.unbound.j2
    dest: "/etc/apparmor.d/local/usr.sbin.unbound"
    mode: 0644
  notify:
    - restart unbound
    - reload apparmor
  when:
    - not unbound_only_zones
    - ansible_distribution == 'Ubuntu'
  tags:
    - notest
    - configuration
    - unbound

# TODO: handle config files in cleaner way
- name: add independent config files
  template:
    src: "{{ item }}.j2"
    dest: "/etc/unbound/conf.d/{{ item }}"
    mode: 0644
  with_items:
    - 01general.conf
    - 98stub_zone.conf
    - 99forward_zone.conf
  notify: restart unbound
  when: not unbound_only_zones
  tags:
    - configuration
    - unbound

- name: configure zones
  template:
    src: 10zone.conf.j2
    dest: "/etc/unbound/conf.d/10{{ item.name }}.conf"
    mode: 0644
  with_items: "{{ unbound_zones }}"
  notify: restart unbound
  tags:
    - configuration
    - unbound

- name: configure unbound.conf to include all configuration
  template:
    src: unbound.conf.j2
    dest: /etc/unbound/unbound.conf
    mode: 0644
    # TODO: find a way to make this work on first run
    # validate: "/usr/sbin/unbound-checkconf %s"
  notify: restart unbound
  tags:
    - configuration
    - unbound

- name: ensure unbound is started/stopped
  service:
    name: unbound
    state: "{{ unbound_service_state }}"
    enabled: "{{ unbound_service_enabled }}"
  tags:
    - service
    - unbound
